/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//lolwa alkhamesi{1506766} - Wejan fahad{1507539}- reema Basondowa {1506099}- alanood alsulami{1507278}
package cpit380practiceForProject;

//import static cpit380practice.PictureJFrame.image;
//import static cpit380practice.PictureJFrame.inputImage;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.awt.image.RescaleOp;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class GUI_Picture extends javax.swing.JFrame {

    String fileName;
    public static Picture image, inputImage, reset, temp;
    ImageIcon icon;

    /**
     * Creates new form pictureFORM
     */
    public GUI_Picture() {

        initComponents();
//        Container ctr= this.getContentPane();
//        ctr.setBackground(Color.BLACK);
        getContentPane().setBackground(Color.gray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        GrayScale = new javax.swing.JButton();
        REDCheckBox1 = new javax.swing.JCheckBox();
        GreenCheckBox = new javax.swing.JCheckBox();
        BlueCheckBox = new javax.swing.JCheckBox();
        redBox = new javax.swing.JTextField();
        blubox = new javax.swing.JTextField();
        greenBox = new javax.swing.JTextField();
        Change = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        RotationDegreLeft90 = new javax.swing.JButton();
        RotationDegreRight90 = new javax.swing.JButton();
        RotationDegree180 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        HorizontalReflection = new javax.swing.JButton();
        D1LeftToRightreflction = new javax.swing.JButton();
        D2LeftToRightReflctin = new javax.swing.JButton();
        VerticalReflection = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ScaleUp = new javax.swing.JButton();
        ScaleDown = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        ApplyCrop = new javax.swing.JButton();
        CropSX = new javax.swing.JTextField();
        CropSY = new javax.swing.JTextField();
        CropEY = new javax.swing.JTextField();
        CropEX = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Copy = new javax.swing.JButton();
        ReduceRedEye = new javax.swing.JButton();
        Filter = new javax.swing.JPanel();
        BoxFilter = new javax.swing.JButton();
        Histogram = new javax.swing.JButton();
        Blend = new javax.swing.JButton();
        Background = new javax.swing.JButton();
        GrayScaleToBinary = new javax.swing.JButton();
        EdgeDetection = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jpictureArea = new javax.swing.JLabel();
        chooseAPicture = new javax.swing.JButton();
        Originalpicture = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        contrast = new javax.swing.JLabel();
        ContrastSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        computeContrast = new javax.swing.JButton();
        ComContrast = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        Brighteness = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();

        jMenu2.setText("color");

        jMenu3.setForeground(new java.awt.Color(51, 255, 51));
        jMenu3.setText("colors");

        jMenu1.setText("co");

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("project");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Colors", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.setToolTipText("Colors");

        GrayScale.setBackground(java.awt.Color.gray);
        GrayScale.setText("Gray Scale");
        GrayScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrayScaleActionPerformed(evt);
            }
        });

        REDCheckBox1.setText("Red");

        GreenCheckBox.setText("Green");

        BlueCheckBox.setText("Blue");

        redBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redBoxActionPerformed(evt);
            }
        });

        blubox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bluboxActionPerformed(evt);
            }
        });

        Change.setBackground(java.awt.Color.gray);
        Change.setText("Change");
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(redBox, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(REDCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(greenBox)
                    .addComponent(GreenCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(blubox, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(BlueCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GrayScale, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(GrayScale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(REDCheckBox1)
                    .addComponent(GreenCheckBox)
                    .addComponent(BlueCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blubox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greenBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Change))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rotation", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 0))); // NOI18N

        RotationDegreLeft90.setBackground(java.awt.Color.gray);
        RotationDegreLeft90.setText("90'Degree Left");
        RotationDegreLeft90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotationDegreLeft90ActionPerformed(evt);
            }
        });

        RotationDegreRight90.setBackground(java.awt.Color.gray);
        RotationDegreRight90.setText("90'Degree Right");
        RotationDegreRight90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotationDegreRight90ActionPerformed(evt);
            }
        });

        RotationDegree180.setBackground(java.awt.Color.gray);
        RotationDegree180.setText("180 'Degree");
        RotationDegree180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotationDegree180ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RotationDegree180, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(RotationDegreLeft90, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(RotationDegreRight90)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(RotationDegree180)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(RotationDegreLeft90))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RotationDegreRight90))))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reflection", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 0))); // NOI18N

        HorizontalReflection.setBackground(java.awt.Color.gray);
        HorizontalReflection.setText("Horizontal");
        HorizontalReflection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorizontalReflectionActionPerformed(evt);
            }
        });

        D1LeftToRightreflction.setBackground(java.awt.Color.gray);
        D1LeftToRightreflction.setText("D1 Refliction");
        D1LeftToRightreflction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D1LeftToRightreflctionActionPerformed(evt);
            }
        });

        D2LeftToRightReflctin.setBackground(java.awt.Color.gray);
        D2LeftToRightReflctin.setText("D2 Refliction");
        D2LeftToRightReflctin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2LeftToRightReflctinActionPerformed(evt);
            }
        });

        VerticalReflection.setBackground(java.awt.Color.gray);
        VerticalReflection.setText("Vertical");
        VerticalReflection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerticalReflectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(D1LeftToRightreflction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HorizontalReflection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VerticalReflection, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(D2LeftToRightReflctin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HorizontalReflection)
                    .addComponent(VerticalReflection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(D1LeftToRightreflction)
                    .addComponent(D2LeftToRightReflctin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scale", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 0))); // NOI18N

        ScaleUp.setBackground(new java.awt.Color(153, 153, 153));
        ScaleUp.setText("Scale Up");
        ScaleUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScaleUpActionPerformed(evt);
            }
        });

        ScaleDown.setBackground(new java.awt.Color(153, 153, 153));
        ScaleDown.setText("Scale Down");
        ScaleDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScaleDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(ScaleUp, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(ScaleDown, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ScaleUp)
                .addComponent(ScaleDown))
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Crop", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 0))); // NOI18N

        ApplyCrop.setBackground(new java.awt.Color(153, 153, 153));
        ApplyCrop.setText("Apply Crop");
        ApplyCrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyCropActionPerformed(evt);
            }
        });

        CropSX.setToolTipText("Crop From Num1");
        CropSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CropSXActionPerformed(evt);
            }
        });

        CropSY.setToolTipText("Crop From Num2");
        CropSY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CropSYActionPerformed(evt);
            }
        });

        CropEY.setToolTipText("Crop to Num2");
        CropEY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CropEYActionPerformed(evt);
            }
        });

        CropEX.setToolTipText("Crop to Num1");
        CropEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CropEXActionPerformed(evt);
            }
        });

        jLabel2.setText("SY");

        jLabel3.setText("EY");

        jLabel4.setText("SX");

        jLabel5.setText("EX");

        Copy.setBackground(new java.awt.Color(204, 204, 204));
        Copy.setText("Applay copy");
        Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyActionPerformed(evt);
            }
        });

        ReduceRedEye.setBackground(new java.awt.Color(204, 204, 204));
        ReduceRedEye.setText("Reduce Red Eye");
        ReduceRedEye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReduceRedEyeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ApplyCrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReduceRedEye, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(Copy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CropSX)
                    .addComponent(CropEX, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CropEY, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CropSY, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(ApplyCrop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(Copy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ReduceRedEye))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CropSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(CropSY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CropEX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(CropEY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Filter.setBackground(new java.awt.Color(204, 204, 204));
        Filter.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filters", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 0))); // NOI18N

        BoxFilter.setBackground(new java.awt.Color(153, 153, 153));
        BoxFilter.setText("Box Filter");
        BoxFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FilterLayout = new javax.swing.GroupLayout(Filter);
        Filter.setLayout(FilterLayout);
        FilterLayout.setHorizontalGroup(
            FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BoxFilter)
                .addContainerGap())
        );
        FilterLayout.setVerticalGroup(
            FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BoxFilter)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        Histogram.setBackground(new java.awt.Color(204, 204, 204));
        Histogram.setText("Histogram");
        Histogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistogramActionPerformed(evt);
            }
        });

        Blend.setBackground(new java.awt.Color(204, 204, 204));
        Blend.setText("Blending");
        Blend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlendActionPerformed(evt);
            }
        });

        Background.setBackground(new java.awt.Color(204, 204, 204));
        Background.setText("Background Subtraction");
        Background.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackgroundActionPerformed(evt);
            }
        });

        GrayScaleToBinary.setBackground(new java.awt.Color(204, 204, 204));
        GrayScaleToBinary.setText("GrayScale To Binary");
        GrayScaleToBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrayScaleToBinaryActionPerformed(evt);
            }
        });

        EdgeDetection.setBackground(new java.awt.Color(204, 204, 204));
        EdgeDetection.setText("Edge Detection");
        EdgeDetection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdgeDetectionActionPerformed(evt);
            }
        });

        chooseAPicture.setText("choose a picture");
        chooseAPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseAPictureActionPerformed(evt);
            }
        });

        Originalpicture.setText("Original picture");
        Originalpicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OriginalpictureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chooseAPicture)
                .addGap(18, 18, 18)
                .addComponent(Originalpicture)
                .addGap(297, 297, 297))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpictureArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpictureArea, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseAPicture)
                    .addComponent(Originalpicture))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contrast", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(51, 153, 0))); // NOI18N

        contrast.setText("Change contrast");

        ContrastSlider1.setMajorTickSpacing(50);
        ContrastSlider1.setMaximum(255);
        ContrastSlider1.setPaintLabels(true);
        ContrastSlider1.setPaintTicks(true);
        ContrastSlider1.setValue(0);
        ContrastSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ContrastSlider1StateChanged(evt);
            }
        });

        jButton1.setText("Apply contrast");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        computeContrast.setText("Compute Contrast");
        computeContrast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeContrastActionPerformed(evt);
            }
        });

        ComContrast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComContrastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ContrastSlider1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(contrast)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(computeContrast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComContrast)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(contrast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContrastSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(computeContrast))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(ComContrast)
                        .addContainerGap())))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        Brighteness.setText("Brighteness");
        Brighteness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrightenessActionPerformed(evt);
            }
        });

        jMenu5.setText("Picture");
        jMenuBar1.add(jMenu5);

        jMenu6.setText("Sound");
        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Histogram, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(GrayScaleToBinary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EdgeDetection, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Blend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(Brighteness, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jLabel1))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(71, 71, 71))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Histogram, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Background)
                            .addComponent(Blend)
                            .addComponent(Brighteness))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GrayScaleToBinary)
                            .addComponent(EdgeDetection)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
        // TODO add your handling code here:

        // TODO add your handling code here:
        double r = -1, g = -1, b = -1;

        if (inputImage != null) {

            if (this.REDCheckBox1.isSelected() == false && this.GreenCheckBox.isSelected() == false
                    && this.BlueCheckBox.isSelected() == false) {

                JOptionPane.showMessageDialog(this, "No color selected!!!", "Error", JOptionPane.ERROR_MESSAGE);
                return;

            }

            if (this.REDCheckBox1.isSelected() == true) {
                if (this.redBox.getText().isEmpty() == false) {

                    try {
                        r = Double.parseDouble(this.redBox.getText());

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Bad number", "Error", JOptionPane.ERROR_MESSAGE);

                        return;
                    }
                }
            }
            if (this.GreenCheckBox.isSelected() == true) {
                if (this.greenBox.getText().isEmpty() == false) {
                    try {
                        g = Double.parseDouble(this.greenBox.getText());

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Bad green number", "Error", JOptionPane.ERROR_MESSAGE);

                        return;
                    }
                }
            }
            if (this.BlueCheckBox.isSelected() == true) {
                if (this.blubox.getText().isEmpty() == false) {
                    try {
                        b = Double.parseDouble(this.blubox.getText());

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Bad blue number", "Error", JOptionPane.ERROR_MESSAGE);

                        return;
                    }
                }
            }
            if (r != -1 || g != -1 || b != -1) {

                inputImage = inputImage.changeColor(r, g, b);
                icon = new ImageIcon(inputImage.getImage());//?
                jpictureArea.setIcon(icon);
                return;

            } else {
                JOptionPane.showMessageDialog(this, "Enter a number", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_ChangeActionPerformed

    private void RotationDegree180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotationDegree180ActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage.rotate180();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_RotationDegree180ActionPerformed

    private void D1LeftToRightreflctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D1LeftToRightreflctionActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage.mirrorDiagTopLeftBotRight();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }
    }//GEN-LAST:event_D1LeftToRightreflctionActionPerformed

    private void CropEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CropEXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CropEXActionPerformed

    private void CropSYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CropSYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CropSYActionPerformed

    private void ApplyCropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyCropActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            int sx, sy, ex, ey;
            sx = Integer.parseInt(this.CropSX.getText());
            sy = Integer.parseInt(this.CropSY.getText());
            ex = Integer.parseInt(this.CropEX.getText());
            ey = Integer.parseInt(this.CropEY.getText());
            inputImage = inputImage.crop(sx, sy, ex, ey);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_ApplyCropActionPerformed

    private void CropEYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CropEYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CropEYActionPerformed

    private void CropSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CropSXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CropSXActionPerformed

    private void HistogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistogramActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            int[] h = inputImage.computeHistogram2();

            for (int i = 0; i < h.length; i++) {
                textArea.append(i + " " + h[i] + "\n ");
            }
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }
    }//GEN-LAST:event_HistogramActionPerformed

    private void BlendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlendActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage.blendPictures();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }
    }//GEN-LAST:event_BlendActionPerformed

    private void ReduceRedEyeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReduceRedEyeActionPerformed
        // TODO add your handling code here:
        int sx, sy, ex, ey;

        sx = Integer.parseInt(this.CropSX.getText());
        sy = Integer.parseInt(this.CropSY.getText());
        ex = Integer.parseInt(this.CropEX.getText());
        ey = Integer.parseInt(this.CropEY.getText());

        if (inputImage != null) {

            inputImage.removeRedEye(sx, sy, ex, ey, Color.BLACK);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }

    }//GEN-LAST:event_ReduceRedEyeActionPerformed

    private void HorizontalReflectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorizontalReflectionActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage.mirrorVertical();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }

    }//GEN-LAST:event_HorizontalReflectionActionPerformed

    private void chooseAPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseAPictureActionPerformed
        // TODO add your handling code here:
        try {
            inputImage = new Picture(FileChooser.pickAFile());
            temp = new Picture(inputImage.getFileName());
            reset = new Picture(inputImage.getFileName());
            jpictureArea.setIcon(new ImageIcon(inputImage.getImage()));

            this.REDCheckBox1.setSelected(false);
            this.GreenCheckBox.setSelected(false);
            this.BlueCheckBox.setSelected(false);
            this.redBox.setText("");
            this.greenBox.setText("");
            this.blubox.setText("");
            this.CropSX.setText("");
            this.CropSY.setText("");
            this.CropEX.setText("");
            this.CropEY.setText("");
            this.textArea.setText("");
            this.ComContrast.setText("");
            this.jTextField1.setText("");

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Please choose image file");
        }
    }//GEN-LAST:event_chooseAPictureActionPerformed

    private void GrayScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrayScaleActionPerformed
        // TODO add your handling code here:

        if (inputImage != null) {

            inputImage.grayscale();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_GrayScaleActionPerformed

    private void OriginalpictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OriginalpictureActionPerformed
        // TODO add your handling code here:
        this.REDCheckBox1.setSelected(false);
        this.GreenCheckBox.setSelected(false);
        this.BlueCheckBox.setSelected(false);
        this.redBox.setText("");
        this.greenBox.setText("");
        this.blubox.setText("");
        this.CropSX.setText("");
        this.CropSY.setText("");
        this.CropEX.setText("");
        this.CropEY.setText("");
        this.textArea.setText("");
        this.ComContrast.setText("");
        this.jTextField1.setText("");
        try {
            jpictureArea.setIcon(new ImageIcon(reset.getImage()));
            inputImage = new Picture(reset.getFileName());

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "There is no image to reset");
        }

    }//GEN-LAST:event_OriginalpictureActionPerformed

    private void VerticalReflectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerticalReflectionActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage.mirrorHorizontal();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_VerticalReflectionActionPerformed

    private void bluboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bluboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bluboxActionPerformed

    private void ContrastSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ContrastSlider1StateChanged
        // TODO add your handling code here:
        cambiarcontarst();
        contrast.setText("Contrast (=" + ContrastSlider1.getValue() + ")");
    }//GEN-LAST:event_ContrastSlider1StateChanged

    private void BackgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackgroundActionPerformed
        // TODO add your handling code here:
        Picture oldB = new Picture(FileChooser.pickAFile());
        Picture newB = new Picture(FileChooser.pickAFile());

        if (inputImage != null) {
            inputImage.swapBackground(oldB, newB, 100);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }
    }//GEN-LAST:event_BackgroundActionPerformed

    private void redBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_redBoxActionPerformed

    private void CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            int sx, sy, ex, ey;
            sx = Integer.parseInt(this.CropSX.getText());
            sy = Integer.parseInt(this.CropSY.getText());
            ex = Integer.parseInt(this.CropEX.getText());
            ey = Integer.parseInt(this.CropEY.getText());
            inputImage = inputImage.crop(sx, sy, ex, ey);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_CopyActionPerformed

    private void RotationDegreLeft90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotationDegreLeft90ActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage = inputImage.rotateLeft();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_RotationDegreLeft90ActionPerformed

    private void RotationDegreRight90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotationDegreRight90ActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage = inputImage.rotateRight();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_RotationDegreRight90ActionPerformed

    private void ScaleUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScaleUpActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage = inputImage.scaleUp(2);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_ScaleUpActionPerformed

    private void ScaleDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScaleDownActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage = inputImage.scaleDown(2);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_ScaleDownActionPerformed

    private void BoxFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxFilterActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (inputImage != null) {

            int w = 5;
            inputImage.blur(w);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }
    }//GEN-LAST:event_BoxFilterActionPerformed

    private void EdgeDetectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdgeDetectionActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {
            inputImage.edgeDetection(10);
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_EdgeDetectionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        float scaleFactor = 1.6f;

        RescaleOp rescale = new RescaleOp(scaleFactor, 0.0f, null);
        BufferedImage bufferedImage = rescale.filter(inputImage.getBufferedImage(), null);

        icon = new ImageIcon(bufferedImage);
        jpictureArea.setIcon(icon);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void D2LeftToRightReflctinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2LeftToRightReflctinActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {

            inputImage.mirrorDiagTopRightBotLeft();
            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);

        }
    }//GEN-LAST:event_D2LeftToRightReflctinActionPerformed

    private void GrayScaleToBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrayScaleToBinaryActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {
            inputImage.bin();

            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        }
    }//GEN-LAST:event_GrayScaleToBinaryActionPerformed

    private void computeContrastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeContrastActionPerformed
        // TODO add your handling code here:
        if (inputImage != null) {
            //inputImage.bin();

            double value = inputImage.ComputeContrast();
            ComContrast.setText(String.valueOf(value));

            icon = new ImageIcon(inputImage.getImage());
            jpictureArea.setIcon(icon);
        } else {
            JOptionPane.showMessageDialog(null, "Select an Image!");
        }


    }//GEN-LAST:event_computeContrastActionPerformed

    private void ComContrastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComContrastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComContrastActionPerformed

    private void BrightenessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrightenessActionPerformed
        // TODO add your handling code here:
        double brightness = 0;

        if (inputImage != null) {

            brightness = inputImage.computingBrighteness();
            jTextField1.setText(String.valueOf(brightness));

        } else {
            JOptionPane.showMessageDialog(null, "Please Choose Image File To Compute The Brighteness");
        }
    }//GEN-LAST:event_BrightenessActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Picture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApplyCrop;
    private javax.swing.JButton Background;
    private javax.swing.JButton Blend;
    private javax.swing.JCheckBox BlueCheckBox;
    private javax.swing.JButton BoxFilter;
    private javax.swing.JButton Brighteness;
    private javax.swing.JButton Change;
    private javax.swing.JTextField ComContrast;
    private javax.swing.JSlider ContrastSlider1;
    private javax.swing.JButton Copy;
    private javax.swing.JTextField CropEX;
    private javax.swing.JTextField CropEY;
    private javax.swing.JTextField CropSX;
    private javax.swing.JTextField CropSY;
    private javax.swing.JButton D1LeftToRightreflction;
    private javax.swing.JButton D2LeftToRightReflctin;
    private javax.swing.JButton EdgeDetection;
    private javax.swing.JPanel Filter;
    private javax.swing.JButton GrayScale;
    private javax.swing.JButton GrayScaleToBinary;
    private javax.swing.JCheckBox GreenCheckBox;
    private javax.swing.JButton Histogram;
    private javax.swing.JButton HorizontalReflection;
    private javax.swing.JButton Originalpicture;
    private javax.swing.JCheckBox REDCheckBox1;
    private javax.swing.JButton ReduceRedEye;
    private javax.swing.JButton RotationDegreLeft90;
    private javax.swing.JButton RotationDegreRight90;
    private javax.swing.JButton RotationDegree180;
    private javax.swing.JButton ScaleDown;
    private javax.swing.JButton ScaleUp;
    private javax.swing.JButton VerticalReflection;
    private javax.swing.JTextField blubox;
    private javax.swing.JButton chooseAPicture;
    private javax.swing.JButton computeContrast;
    private javax.swing.JLabel contrast;
    private javax.swing.JTextField greenBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    public static javax.swing.JLabel jpictureArea;
    private javax.swing.JTextField redBox;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables

    public void cambiarcontarst() {
        float scaleFactor = 1.6f;//change scaleFactor to change contrast

        RescaleOp rescale = new RescaleOp(scaleFactor, 0.0f, null);
        BufferedImage bufferedImage = rescale.filter(inputImage.getBufferedImage(), null);//(sourse,destination)
        ImageIcon icon = new ImageIcon(bufferedImage);
        jpictureArea.setIcon(icon);
    }
}
